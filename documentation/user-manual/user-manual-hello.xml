<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<chapter id='hello'>
	<section>
	<title>BitBake Hello World</title>

	<para>The simplest example commonly used to demonstrate any new
		programming language or tool is the i
		<ulink url="http://en.wikipedia.org/wiki/Hello_world_program">Hello World</ulink>example.
		This chapter demonstrates, in tutorial form, Hello World within
		the context of BitBake.  This tutorial describes how to create
		a new Project and the applicable metadata files necessary to
		allow BitBake to build it.
</para></section>
<section>
		<title>Obtaining BitBake</title>
		<para>
			There first thing we need to do is download the BitBake
			source code.
			At the time of writing, the current version is 1.17.0:
			<screen>
				$ wget http://git.openembedded.org/bitbake/snapshot/bitbake-1.17.0.tar.gz
				$ tar zxpvf bitbake-1.17.0.tar.gz
				$ cd bitbake-1.17.0/
				$ ls -al
				total 100
				drwxrwxr-x. 9 wmat wmat  4096 Jan 31 13:44 .
				drwxrwxr-x. 3 wmat wmat  4096 Feb  4 10:45 ..
				-rw-rw-r--. 1 wmat wmat   365 Nov 26 04:55 AUTHORS
				drwxrwxr-x. 2 wmat wmat  4096 Nov 26 04:55 bin
				drwxrwxr-x. 4 wmat wmat  4096 Jan 31 13:44 build
				-rw-rw-r--. 1 wmat wmat 16501 Nov 26 04:55 ChangeLog
				drwxrwxr-x. 2 wmat wmat  4096 Nov 26 04:55 classes
				drwxrwxr-x. 2 wmat wmat  4096 Nov 26 04:55 conf
				drwxrwxr-x. 3 wmat wmat  4096 Nov 26 04:55 contrib
				-rw-rw-r--. 1 wmat wmat 17987 Nov 26 04:55 COPYING
				drwxrwxr-x. 3 wmat wmat  4096 Nov 26 04:55 doc
				-rw-rw-r--. 1 wmat wmat    69 Nov 26 04:55 .gitignore
				-rw-rw-r--. 1 wmat wmat   849 Nov 26 04:55 HEADER
				drwxrwxr-x. 5 wmat wmat  4096 Jan 31 13:44 lib
				-rw-rw-r--. 1 wmat wmat   195 Nov 26 04:55 MANIFEST.in
				-rwxrwxr-x. 1 wmat wmat  3195 Jan 31 11:57 setup.py
				-rw-rw-r--. 1 wmat wmat  2887 Nov 26 04:55 TODO
			</screen>
		</para>
		<para>At this point you should have BitBake 1.17.0 extracted to
			a directory matching the latter directory tree.  Please
			note that you'll see your username whever "wmat"
			appears above.
	</para></section>
	<section>
		<title>Setting Up BitBake</title>
		<para>
			Now let's setup our BitBake environment.  In this 
			example BitBake will run from the Build directory
			instead of installing it to your system permanently.
			<screen>
				$ python setup.py build
			</screen>
			This command runs the setup script, setup.py and
			instructs it to create a directory called build and
			install the libraries and scripts it requires to run
			to that directory.  To make sure that the Puthon
			runtime environment knows where to find these new
			libraries and scripts, we can at to the PYTHONPATH
			environment variable as follows:
			<screen>
				$ export PYTHONPATH=`pwd`/build/lib
			</screen>
			Let's run BitBake now to make sure it's working.
			Make sure you're in the BitBake source code directory
			and issue the following command:
			<screen>
				$ ./bin/bitbake --version
				BitBake Build Tool Core version 1.17.0, bitbake version 1.17.0
			</screen>
			You're now ready to use BitBake.
		</para>
		<para>Note that if you're a Vim user, you will find useful
			Vim configuration contributions in the <emphasis>
				contrib/vim</emphasis> directory.  Copy the
			files from that directory to your <emphasis>/home/
				yourusername/.vim</emphasis> directory.  If it
			doesn't	exist, create it, and restart Vim.
		</para>
	</section>
	<section>
		<title>The Hello World Example</title>
		<para>
			The following example leaps directly into how BitBake
			works.  Every attempt is made to explain what is 
			happening, however, further information can be found
			in the Metadata chapter.
		</para>
	</section>

</chapter>
